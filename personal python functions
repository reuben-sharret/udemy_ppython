'''
desc: my first function from the lessons.
date: oct 4th 2020
purp: to add two numbers
'''
def add_function(num1,num2):
    return num1+num2


'''
desc: to print an inputted name
date: oct 4th 2020
purp: to print a name && show that variable can be assigned in the function definition
'''
def say_hello(name='default'):
    print(f'hello {name}')

#return even numbers is inside list
def check_even_list(num_list):
    #placeholders
    even_numbers = []
    
    for number in num_list:
        if number % 2 == 0:
            even_numbers.append(number)
        else:
            pass
    return even_numbers

#to see who has the most hours worked
def employee_check(work_hours):
    #placeholders
    current_max = 0
    employee_of_month = ''
    
    for employee,hours in work_hours:
        if hours > current_max:
            current_max = hours
            employee_of_month = employee
        else:
            pass
    
    return (employee_of_month,current_max)
    
 # my first game!! 3 CARD MONTE - note - each function are seperate only to be called in the final function 'check guess'
 
 # import shuffle function. this rearranges intem within a list. doesn't return anything
 from random import shuffle
 
 #function to randomize list and return new list
 def shuffle_list(mylist):
    shuffle(mylist)
    return mylist
 
 #function to prompt the user for a guess limited to the number of cups
 def player_guess():
    guess = ''
    while guess not in ['0','1','2']:
        guess = input("Pick a number: (0, 1, or 2) ")
    return int(guess)
 
 #checks the guess against the actual value in the shuffled list.
 def check_guess(mylist,guess):
    if mylist[guess] == 'o':
        print ('correct!!! you win!!')
    else:
        print ('wrong guess')
        print (mylist)
        
 # END OF GAME
 
 #ARGS and KWARGS examples
 def arg_func(*args):
    #return sum(args)*.05
    print(args)
    
 def kwargs_func(**kwargs):
    print(kwargs)
    if 'fruit' in kwargs:
        print('my fruit of choice is {}'.format(kwargs['fruit']))
    else:
        print('no fruit here')
        
  def arg_kwags_func(*args,**kwargs):
    print(args)
    print(kwargs)
    print('i would like {} {}'.format(args[0],kwargs['food']))

def lesser_of_two_evens(a,b):
    if a%2 == 0 and b%2 == 0: 
        if a < b:
            return a
        else:
            return b
    else:
        if a < b:
            return b
        else:
            return a
            
def MinMax_of_two_evens(a,b):
   if a%2 == 0 and b%2 == 0:            
        return min(a,b)
   else:
        return max(a,b)
        
def first_letter_match(text):
    newst = text.lower().split()
    return newst[0][0] == newst[1][0]
    
def makes_twenty(n1,n2):
    if n1==20 or n2==20 or n1+n2==20:
        return True
    return False
    #return n1==20 or n2==20 or n1+n2==20
    
def old_macdonald(name):
    if len(name)>3:
        return name[0].capitalize() + name[1:3] +name[3].capitalize() +name[4:]
    if 0<len(name)<4:
        return name[0].capitalize() + name[1:]
        
def master_yoda(text):
    sen = text.split()
    print(sen[::-1])
    
def has_33(nums):
    for x in range(len(nums)-1):
        if nums[x] == 3 and nums[x+1] == 3:
            return True
    return False

def paper_doll(text):
    ans=''
    for x in text:
        ans=ans+x*3
    print(ans)

def blackjack(a,b,c):
    if a+b+c<=21:
        return a+b+c
    elif (a+b+c>21) and (a==11 or b==11 or c==11):
    #elif 11 in [a,b,c] and sum([a,b,c]) <=31:
        return (a+b+c-10)
    elif a+b+c>21:
        return 'BUST'
        
#to remove elements from a string between vlaues of 6 & 9 
def summer_69(arr):
    start=0
    end=0
    #find 6
    if 6 in arr:
        for x in range(len(arr)):
            if arr[x]==6:
                start = x

    #find 9
    if 9 in arr:
        for t in range(len(arr)):
            if arr[t]==9:
                end = t

    #remove numbers
    if start<end:
        while start !=end:
            arr.pop(start)
            end-=1
            
    if start == end and start != 0:
        arr.pop(start)
        
    #sum numbers
    return sum(arr)
    
def summer_69_again(arr):
    total = 0
    add = True
    
    for num in arr:
        while add:
            if num != 6:
                total+=num
                break
            else:
                add = False
                
        while not add:
            if num != 9:
                break
            else:
                add = true
                break
    return Total
    
def spy_game(nums):
    seven_check = [0,0,0]
    count=0

    for x in range(len(nums)):
        if nums[x] == 0:
            #print(str(nums[x]) + '-' + str(x) + '-' + str(count))
            seven_check[count] = nums[x]
            count+=1
        if nums[x] == 7:
            #print(str(nums[x]) + '-' + str(x) + '-' + str(count))
            seven_check[count] = nums[x]
            count+=1

    return seven_check == [0,0,7]:


def spy_game2(nums):
    code [0,0,7]
    
    for num in nums:
        if num == code[0]:
            code.pop(0)
            
    return len(code) == 0
    
 def count_primes(num):
    
    if num <2:
        return 0
    
    #2 or greater
    #store primes
    primes = [2]
    #to count up to input
    x=3
    
    #x is going through every number up to input
    while x<=num:
        #check if x is prime
        for y in range (3,x,2):
            if x%y == 0:
                x+=2
                break
        else:
            primes.append(x)
            x+=2
    print(primes)
    return len(primes)
    
 def multiples (num):
    multiples = [0]
    
    for x in range(num):
        if x%3 == 0 or x%5 == 0:
            multiples.append(x)
            
    print (multiples)
    return sum(multiples)
    
 def fibonaci_sum(num):
    multiples = [0,1]
    
    for x in range(num):
        multiples.append(multiples[x]+multiples[x+1])
            
    print (multiples)
    return sum(multiples)
